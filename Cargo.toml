[workspace]
resolver = "2"
members = [
  # utilities
  "oco",
  "any_spawner",
  "const_str_slice_concat",
  "either_of",
  "next_tuple",
  "oco",
  "or_poisoned",

  # core
  "hydration_context",
  "leptos",
  "leptos_dom",
  "leptos_config",
  "leptos_hot_reload",
  "leptos_macro",
  "leptos_server",
  "reactive_graph",
  "reactive_stores",
  "reactive_stores_macro",
  "server_fn",
  "server_fn_macro",
  "server_fn/server_fn_macro_default",
  "tachys",

  # integrations
  "integrations/actix",
  "integrations/axum",
  "integrations/utils",

  # libraries
  "meta",
  "router",
  "router_macro",
  "any_error",
]
exclude = ["benchmarks", "examples", "projects"]

[workspace.package]
version = "0.7.0"
edition = "2021"
rust-version = "1.76"

[workspace.dependencies]
throw_error = { path = "./any_error/", version = "0.2.0" }
any_spawner = { path = "./any_spawner/", version = "0.2.0" }
const_str_slice_concat = { path = "./const_str_slice_concat", version = "0.1.0" }
either_of = { path = "./either_of/", version = "0.1.0" }
hydration_context = { path = "./hydration_context", version = "0.2.0" }
leptos = { path = "./leptos", version = "0.7.0" }
leptos_config = { path = "./leptos_config", version = "0.7.0" }
leptos_dom = { path = "./leptos_dom", version = "0.7.0" }
leptos_hot_reload = { path = "./leptos_hot_reload", version = "0.7.0" }
leptos_integration_utils = { path = "./integrations/utils", version = "0.7.0" }
leptos_macro = { path = "./leptos_macro", version = "0.7.0" }
leptos_router = { path = "./router", version = "0.7.0" }
leptos_router_macro = { path = "./router_macro", version = "0.7.0" }
leptos_server = { path = "./leptos_server", version = "0.7.0" }
leptos_meta = { path = "./meta", version = "0.7.0" }
next_tuple = { path = "./next_tuple", version = "0.1.0" }
oco_ref = { path = "./oco", version = "0.2.0" }
or_poisoned = { path = "./or_poisoned", version = "0.1.0" }
reactive_graph = { path = "./reactive_graph", version = "0.1.0" }
reactive_stores = { path = "./reactive_stores", version = "0.1.0" }
reactive_stores_macro = { path = "./reactive_stores_macro", version = "0.1.0" }
server_fn = { path = "./server_fn", version = "0.7.0" }
server_fn_macro = { path = "./server_fn_macro", version = "0.7.0" }
server_fn_macro_default = { path = "./server_fn/server_fn_macro_default", version = "0.7.0" }
tachys = { path = "./tachys", version = "0.1.0" }

wasm-bindgen = "0.2.95"
wasm-bindgen-futures = "0.4.45"
web-sys = {version = "0.3.72", features = [
  "History",
  "Location",
  # Form
  "FormData",
  "SubmitEvent",
  "Url",
  "UrlSearchParams",
  # Fetching in Hydrate Mode
  "Headers",
  "Request",
  "RequestInit",
  "RequestMode",
  "Response",
  "ReadableStream",
  "ReadableStreamDefaultReader",
  "AbortController",
  "AbortSignal",
  "Window",
  "Document",
  "HtmlElement",
  "Element",
  "console",
  "Comment",
  "Text",
  "Node",
  "DocumentFragment",
  "DomTokenList",
  "CssStyleDeclaration",
  "ShadowRoot",
  "HtmlCollection",
  "DomStringMap",
  # Events we cast to in leptos_macro -- added here so we don't force users to import them
  "AddEventListenerOptions",
  "AnimationEvent",
  "BeforeUnloadEvent",
  "ClipboardEvent",
  "CompositionEvent",
  "CustomEvent",
  "DeviceMotionEvent",
  "DeviceOrientationEvent",
  "DragEvent",
  "ErrorEvent",
  "Event",
  "FocusEvent",
  "GamepadEvent",
  "HashChangeEvent",
  "InputEvent",
  "KeyboardEvent",
  "MessageEvent",
  "MouseEvent",
  "PageTransitionEvent",
  "PointerEvent",
  "PopStateEvent",
  "ProgressEvent",
  "PromiseRejectionEvent",
  "SecurityPolicyViolationEvent",
  "StorageEvent",
  "SubmitEvent",
  "TouchEvent",
  "TransitionEvent",
  "UiEvent",
  "WheelEvent",

  # HTML Element Types
  "HtmlHtmlElement",
  "HtmlBaseElement",
  "HtmlHeadElement",
  "HtmlLinkElement",
  "HtmlMetaElement",
  "HtmlStyleElement",
  "HtmlTitleElement",
  "HtmlBodyElement",
  "HtmlHeadingElement",
  "HtmlQuoteElement",
  "HtmlDivElement",
  "HtmlDListElement",
  "HtmlHrElement",
  "HtmlLiElement",
  "HtmlOListElement",
  "HtmlParagraphElement",
  "HtmlPreElement",
  "HtmlUListElement",
  "HtmlAnchorElement",
  "HtmlBrElement",
  "HtmlDataElement",
  "HtmlQuoteElement",
  "HtmlSpanElement",
  "HtmlTimeElement",
  "HtmlAreaElement",
  "HtmlAudioElement",
  "HtmlImageElement",
  "HtmlMapElement",
  "HtmlTrackElement",
  "HtmlVideoElement",
  "HtmlEmbedElement",
  "HtmlIFrameElement",
  "HtmlObjectElement",
  "HtmlParamElement",
  "HtmlPictureElement",
  "HtmlSourceElement",
  "SvgElement",
  "HtmlCanvasElement",
  "HtmlScriptElement",
  "HtmlModElement",
  "HtmlTableCaptionElement",
  "HtmlTableColElement",
  "HtmlTableColElement",
  "HtmlTableElement",
  "HtmlTableSectionElement",
  "HtmlTableCellElement",
  "HtmlTableSectionElement",
  "HtmlTableCellElement",
  "HtmlTableSectionElement",
  "HtmlTableRowElement",
  "HtmlButtonElement",
  "HtmlDataListElement",
  "HtmlFieldSetElement",
  "HtmlFormElement",
  "HtmlInputElement",
  "HtmlLabelElement",
  "HtmlLegendElement",
  "HtmlMeterElement",
  "HtmlOptGroupElement",
  "HtmlOutputElement",
  "HtmlProgressElement",
  "HtmlSelectElement",
  "HtmlTextAreaElement",
  "HtmlDetailsElement",
  "HtmlDialogElement",
  "HtmlMenuElement",
  "HtmlSlotElement",
  "HtmlTemplateElement",
  "HtmlOptionElement",
]}
js-sys = "0.3.72"
rkyv = "0.8"



[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'

[workspace.metadata.cargo-all-features]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]
